---

- name: Проверка наличия файла '/srv/iso/{{ termidesk.iso }}.iso'
  stat:
    path: /srv/iso/{{ termidesk.iso }}.iso
  register: termidesk_result
  when: inventory_hostname == repo.srv 

- name: Создания репозитория 'termidesk'
  block:

  - name: Копирование ISO образов AstraLinux
    copy:
      src: '../../../../../iso/AstraLinux/{{ ansible_facts.lsb.release }}/{{ termidesk.iso }}.iso'
      dest: '/srv/iso/'
      force: no

  - name: Создание папок репозитория
    file:
      state: directory
      path: '/srv/repo/{{ termidesk.iso }}'
      mode: 0755
    ignore_errors: yes
  
  - name: Монтирование образов ОС
    mount:
      path: '/srv/repo/{{ termidesk.iso }}'
      src: '/srv/iso/{{ termidesk.iso }}.iso'
      fstype: iso9660
      opts: ro,auto
      state: mounted

  when:
  - inventory_hostname == repo.srv 
  - not termidesk_result.stat.exists


- name: Чтение статуса репозитория {{ termidesk.iso }}
  shell: cat /etc/apt/sources.list.d/sources.list | grep '{{ termidesk.iso }}'
  register: termidesk_source_status
  ignore_errors: yes
  when: inventory_hostname in termidesk.srv 

- name: Подключение репозитория 'termidesk'
  block:

  - name: Заполняем файл '/etc/apt/sources.list.d/sources.list'
    lineinfile:
      path: /etc/apt/sources.list.d/sources.list
      line: 'deb http://{{ hostvars[repo.srv].ansible_ssh_host }}:{{ repo.port }}/{{ termidesk.iso }}/repos/astra {{ _repo.dist }} non-free'
      state: present

  - name: Добавление ключа репозитория 'termidesk'
    shell: |
      wget -qO - http://{{ hostvars[repo.srv].ansible_ssh_host }}:{{ repo.port }}/{{ termidesk.iso }}/repos/astra/GPG-KEY-PUBLIC | sudo apt-key add -
      apt update

  when:
  - inventory_hostname in termidesk.srv 
  - termidesk_source_status.stdout == ''


# - name: Проверка наличия файла '/etc/rabbitmq/rabbitmq.conf'
  # stat:
    # path: '/etc/rabbitmq/rabbitmq.conf'
  # register: rabbitmq_result
  # when: inventory_hostname in termidesk.srv 

# - name: 
  # block:

  # - name: Инсталляция 'postgresql-11'
    # apt:
      # name: postgresql-11
      # state: latest
      # update_cache: yes

  # - name: Создание БД 'termidesk'
    # shell: |
      # sudo -u postgres psql -c 'CREATE DATABASE termidesk LC_COLLATE $$ru_RU.utf8$$ LC_CTYPE $$ru_RU.utf8$$ TEMPLATE template0;'
      # sudo -u postgres psql -c 'CREATE USER termidesk WITH PASSWORD $$ksedimret$$;'
      # sudo -u postgres psql -c 'GRANT ALL PRIVILEGES ON DATABASE termidesk TO termidesk;'
    # ignore_errors: yes

  # - name: Модифицируем файл '/etc/parsec/mswitch.conf'
    # shell: |
      # sed -i "s/zero_if_notfound: no/zero_if_notfound: yes/g" /etc/parsec/mswitch.conf

  # - name: Инсталляция 'rabbitmq-server'
    # apt:
      # name: rabbitmq-server
      # state: latest
      # update_cache: yes

  # - name: Копируем файл конфигурации '/etc/rabbitmq/rabbitmq.conf'
    # template:
      # src: rabbitmq.j2
      # dest: /etc/rabbitmq/rabbitmq.conf
      # owner: rabbitmq
      # group: rabbitmq

  # - name: Копируем файл конфигурации '/etc/rabbitmq/definitions.json'
    # template:
      # src: definitions.j2
      # dest: /etc/rabbitmq/definitions.json
      # owner: rabbitmq
      # group: rabbitmq

  # - name: Копируем файл '/tmp/rabbitmq_password2hash.sh'
    # get_url:
      # url: http://{{ hostvars[repo.srv].ansible_ssh_host }}:{{ repo.port }}/{{ termidesk.iso }}/repos/Addons/Scripts/rabbitmq_password2hash.sh
      # dest: /tmp/rabbitmq_password2hash.sh
      # mode: 0777

  # - name: Выполнение преобразования и добавления пароля в файл '/etc/rabbitmq/definitions.json'
    # shell: |
      # sudo /tmp/rabbitmq_password2hash.sh -w -u admin -p {{ pass.admin }}
      # sudo /tmp/rabbitmq_password2hash.sh -w -u termidesk -p {{ termidesk.pass }}

  # - name:  Инициализация RabbitMQ-server'
    # shell: |
      # rabbitmq-plugins enable rabbitmq_management

  # - name: Включаем и перезапускаем службу 'RabbitMQ-server'
    # service:
      # name:  rabbitmq-server
      # enabled: yes
      # state: restarted

  # when:
  # - inventory_hostname in termidesk.srv 
  # - not rabbitmq_result.stat.exists

- name:  Автоматизированная установка
  block:

  - name: Копируем файл 'termidesk-standalone.sh'
    get_url:
      url: http://{{ hostvars[repo.srv].ansible_ssh_host }}:{{ repo.port }}/{{ termidesk.iso }}/repos/Addons/Scripts/termidesk-standalone.sh
      dest: /tmp/termidesk-standalone.sh
      mode: 0777

  - name: Инсталляция 'debconf'
    apt:
      name: debconf
      state: latest
      update_cache: yes

  - name: Копируем файла ответов 'notification_file'
    template:
      src: notification_file.j2
      dest: /tmp/notification_file





  - name: добавление файла ответов в утилиту debconf
    shell: |
      debconf-set-selections /tmp/notification_file









  when:
  - inventory_hostname in termidesk.srv 
#  - not rabbitmq_result.stat.exists


...