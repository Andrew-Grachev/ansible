kind: DaemonSet
replicaCount: 1
image:
  repository: cr.fluentbit.io/fluent/fluent-bit
  tag: ""
  pullPolicy: IfNotPresent
testFramework:
  enabled: true
  image:
    repository: busybox
    pullPolicy: Always
    tag: latest
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name:
rbac:
  create: true
  nodeAccess: false
podSecurityPolicy:
  create: false
  annotations: {}
openShift:
  enabled: false
  securityContextConstraints:
    create: true
    annotations: {}
podSecurityContext: {}
hostNetwork: false
dnsPolicy: ClusterFirst
dnsConfig: {}
hostAliases: []

securityContext: {}
service:
  type: ClusterIP
  port: 2020
  loadBalancerClass:
  loadBalancerSourceRanges: []
  labels: {}
  annotations: {}
serviceMonitor:
  enabled: true
  namespace: monitoring
  jobLabel: fluentbit
  selector:
    release: prometheus
    
prometheusRule:
  enabled: false
dashboards:
  enabled: true
  labelKey: grafana_dashboard
  annotations:
    grafana-dashboard-folder: Logging
  namespace: "monitoring"
lifecycle: {}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http

  enabled: true
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 5    
    
    
resources: {}
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  extraHosts: []
  tls: []
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 75
  customRules: []
  behavior: {}
podDisruptionBudget:
  enabled: false
  annotations: {}
  maxUnavailable: "30%"
nodeSelector: {}
tolerations:
  - effect: NoSchedule
    operator: Exists
affinity: {}
labels: {}
annotations: {}
podAnnotations: {}
podLabels: {}
minReadySeconds:
terminationGracePeriodSeconds:
priorityClassName: ""
env: []
envWithTpl: []
envFrom: []
extraContainers: []
flush: 1
metricsPort: 2020
extraPorts: []
extraVolumes: []
extraVolumeMounts: []
updateStrategy: {}
existingConfigMap: ""
networkPolicy:
  enabled: false
luaScripts: {}
config:
  service: |
{% raw %}
    [SERVICE]
        Daemon Off
        Flush {{ .Values.flush }}
        Log_Level {{ .Values.logLevel }}
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port {{ .Values.metricsPort }}
        Health_Check On
{% endraw %}
  inputs: |
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        Tag kube.*
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On
    [INPUT]
        Name systemd
        Tag host.*
        Systemd_Filter _SYSTEMD_UNIT=kubelet.service
        Read_From_Tail On
  filters: |
    [FILTER]
        Name kubernetes
        Match kube.*
        Merge_Log On
        Keep_Log Off
        K8S-Logging.Parser On
        K8S-Logging.Exclude On
    [FILTER]
        Name            nest
        Match           kube.*
        Operation       lift
        Wildcard        kubernetes.*
        Nested_under    kubernetes
        Add_prefix      k8s_
    [FILTER]
        Name modify
        Match kube.*
        Condition  Key_exists timestamp
        Hard_rename timestamp @timestamp
    [FILTER]
        Name modify
        Match kube.*
        Condition  Key_exists time
        Rename time log_time
  outputs: |
    [OUTPUT]
        Name es
        Match kube.*
        Host elasticsearch
        Logstash_Format On
        Logstash_Prefix_Key k8s_namespace_name
        Logstash_DateFormat %EY
        Suppress_Type_Name On
        Retry_Limit 5
        Replace_Dots On

    [OUTPUT]
        Name es
        Match host.*
        Host elasticsearch
        Suppress_Type_Name On
        Logstash_Format On
        Logstash_Prefix node
        Retry_Limit False
  upstream: {}
  customParsers: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
  extraFiles: {}
volumeMounts:
  - name: config
    mountPath: /fluent-bit/etc/fluent-bit.conf
    subPath: fluent-bit.conf
  - name: config
    mountPath: /fluent-bit/etc/custom_parsers.conf
    subPath: custom_parsers.conf
daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File
daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true
args: []
command: []
initContainers: []
logLevel: info