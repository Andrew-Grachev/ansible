---

- include_tasks: '{{ ansible_distribution }}/Config_sshd.yaml'

- name: Создание прав sudo пользователю '{{ ansible_ssh_user }}'
  shell: |
    echo "{{ ansible_ssh_user }} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/{{ ansible_ssh_user }}
    chmod 0440 /etc/sudoers.d/{{ ansible_ssh_user }}

- name: Создание прав sudo пользователю '{{ ansible_ssh_user }}'
  shell: |
    pdpl-user -i 63 {{ ansible_ssh_user }}
  when: ansible_distribution == 'Astra Linux'

- name: Проверка наличия 'ssh' ключа '/home/{{ ansible_ssh_user }}/.ssh/id_rsa'
  stat:
    path: /home/{{ ansible_ssh_user }}/.ssh/id_rsa
  register: ssh_result
  ignore_errors: yes

- name: Генерация ssh ключа пользователя '{{ ansible_ssh_user }}'
  user:
    name: '{{ ansible_ssh_user }}'
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
  become: no
  when: not ssh_result.stat.exists

- name: Проверка наличия файла '/root/.ssh/id_rsa'
  stat:
    path: /root/.ssh/id_rsa
  register: id_rsa_result
  ignore_errors: yes
  when:
    - root_pass is defined

- name: Генерация ssh ключа пользователя 'root'
  user:
    name: root
    state: present
    password: "{{ root_pass | password_hash('sha512') }}"
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
  ignore_errors: yes
  when:
    - not id_rsa_result.stat.exists
    - root_pass is defined

- name: Чтение ключа SSH пользователя '{{ ansible_ssh_user }}'
  set_fact:
    idrsapub: "{{ lookup('file', '../../ssh/' + ansible_ssh_user + '/id_rsa.pub') }}"

- name: Проверка ключа 'ansible'
  shell: cat /home/{{ ansible_ssh_user }}/.ssh/authorized_keys | grep "{{ idrsapub }}"
  register: idrsa_status
  ignore_errors: yes

- name: Запись ключа пользователя 'ansible'
  shell: |
    echo "{{ idrsapub }}" >> /home/{{ ansible_ssh_user }}/.ssh/authorized_keys
    chmod 600 /home/{{ ansible_ssh_user }}/.ssh/authorized_keys
    chown {{ ansible_ssh_user }} /home/{{ ansible_ssh_user }}/.ssh/authorized_keys
  when: idrsa_status.stdout == ""

- name: Обмен ключами пользователя '{{ ansible_ssh_user }}' между узлами
  shell: |
    {% for item in ansible_play_batch %}
    sshpass -p '{{ ansible_ssh_pass }}' ssh-copy-id -i /home/{{ ansible_ssh_user }}/.ssh/id_rsa.pub -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ ansible_ssh_user }}@{{ hostvars[item].ansible_ssh_host }}
    {% endfor %}
  ignore_errors: yes
  become: no

- name: Обмен ключами пользователя 'root' между узлами
  shell: |
    {% for item in ansible_play_batch %}
    sshpass -p '{{ root_pass }}' ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@{{ hostvars[item].ansible_ssh_host }}
    {% endfor %}
  ignore_errors: yes
  when: root_pass is defined

...


