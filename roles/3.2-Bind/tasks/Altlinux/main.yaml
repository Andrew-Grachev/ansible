---

- name: 3.2 | Проверка наличия файла '/etc/named.conf'
  stat:
    path: /etc/named.conf
  register: bind_result

- name: 3.2 | Создание сервера Bind
  block:

  - name: 3.2 | Установка пакетов сервера
    apt_rpm:
      update_cache: yes
      pkg:
        - bind
        - bind-utils
        - net-tools

  - name: 3.2 | Чтение 'forwarders' в '/etc/bind/options.conf'
    shell: |
      cat /etc/bind/options.conf | grep '//forwarders { };'
    register: status_forwarders
    ignore_errors: yes

  - name: 3.2 | (Проверка!!!!!!!!!!!!!)Внесение изменений 'forwarders' в '/etc/bind/options.conf'
    !shell: |
      sed -i 's#//forwarders { };#forwarders { {{ Net.bind | join('; ') }} ; };#g' /etc/bind/options.conf
      sed -i 's#listen-on { 127.0.0.1; };#listen-on { any };#g' /etc/bind/options.conf
      sed -i 's#//allow-recursion { ??????; };#allow-recursion { any; };#g' /etc/bind/options.conf
      sed -i 's#//forward only;#recursion yes;#g' /etc/bind/options.conf
      
    when: status_forwarders.stdout != ''

  - name: 3.2 | Чтение '{{ domain }}' в '/etc/bind/local.conf'
    shell: |
      cat /etc/bind/local.conf | grep '{{ domain }}'
    register: status_domain
    ignore_errors: yes

  - name: 3.2 | Создание зоны 'domain'
    block:

    - name: 3.2 | Добавить текст в конец файла '/etc/bind/local.conf'
      blockinfile:
        path: /etc/bind/local.conf
        block: |
          zone "{{ domain }}" {
          type master;
          file "/etc/bind/zone/db.{{ domain }}";
          };
          
          zone "{{ ansible_ssh_host.split('.')[2] }}.{{ ansible_ssh_host.split('.')[1] }}.{{ ansible_ssh_host.split('.')[0] }}.in-addr.arpa" {
          type master;
          file "/etc/bind/zone/db.{{ ansible_ssh_host.split('.')[2] }}.{{ ansible_ssh_host.split('.')[1] }}.{{ ansible_ssh_host.split('.')[0] }}";
          };
        insertafter: EOF
        marker: "// Зона {{ domain }}"


    - name: 3.2 | Создание файла '/etc/bind/zone/db.{{ domain }}'
      copy:
        dest: '/etc/bind/zone/db.{{ domain }}'
        content: |
          $TTL  1D
          @   IN  SOA  {{ inventory_hostname }}.{{ domain }}.  admin.{{ domain }}. (
                       {{ (ansible_date_time.year | int * 10000 + ansible_date_time.month | int * 100 + ansible_date_time.day | int) }}00; Serial
                       604800    ; Refresh
                       86400     ; Retry
                       2419200   ; Expire
                       604800 )  ; Negative Cach TTL
         
             IN   NS   {{ inventory_hostname }}.{{ domain }}.
         
          {% for item in ansible_play_batch %}
          {{ item }}    IN  A {{ hostvars[item].ansible_ssh_host }}
          {% endfor %}
         
          test.{{ domain }}.  CNAME  {{ inventory_hostname }}.{{ domain }}.

    - name: 3.2 | Создание файла '/etc/bind/zone/db.{{ ansible_ssh_host.split('.')[2] }}.{{ ansible_ssh_host.split('.')[1] }}.{{ ansible_ssh_host.split('.')[0] }}'
      copy:
        dest: "/etc/bind/zone/db.{{ ansible_ssh_host.split('.')[2] }}.{{ ansible_ssh_host.split('.')[1] }}.{{ ansible_ssh_host.split('.')[0] }}"
        content: |
          $TTL  1D
          @   IN  SOA  {{ inventory_hostname }}.{{ domain }}.  admin.{{ domain }}. (
                       {{ (ansible_date_time.year | int * 10000 + ansible_date_time.month | int * 100 + ansible_date_time.day | int) }}00; Serial
                       604800    ; Refresh
                       86400     ; Retry
                       2419200   ; Expire
                       604800 )  ; Negative Cach TTL
         
              IN  NS   {{ inventory_hostname }}.{{ domain }}.
         
          {% for item in ansible_play_batch %}
          {{ hostvars[item].ansible_ssh_host.split('.')[3] }}  IN  PTR  {{ item }}.
          {% endfor %}

    when: status_domain.stdout == ''

  - name: 3.2 | Создание зоны-заглушки 'k8s.subdomain.domain'
    block:

    - name: 3.2 | Чтение '{{ k8s.subdomain }}.{{ domain }}' в '/etc/bind/local.conf'
      shell: |
        cat /etc/bind/local.conf | grep '{{ k8s.subdomain }}.{{ domain }}'
      register: status_subdomain
      ignore_errors: yes

    - name: 3.2 | Создание зоны 'k8s.subdomain.domain'
      block:

      - name: 3.2 | Добавить текст в конец файла '/etc/bind/local.conf'
        blockinfile:
          path: /etc/bind/local.conf
          block: |
            zone "{{ k8s.subdomain }}.{{ domain }}" {
            type stub;
            masters { {{ k8s.core_dns }}; };
            file "/etc/bind/zone/db.{{ k8s.subdomain }}.{{ domain }}";
            };
          insertafter: EOF
          marker: "// Зона {{ k8s.subdomain }}.{{ domain }}"

      when: status_subdomain.stdout == ''

    when: k8s.subdomain is defined

  - name: 3.2 | Включаем и перезапускаем службы
    service:
      name: bind
      state: restarted
      enabled: yes
 
  # when: not bind_result.stat.exists

...