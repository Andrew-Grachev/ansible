---
### 2.1 - ALD ###
- name: Проверка наличия файла /etc/ald/ald.conf
  stat:
    path: /etc/ald/ald.conf
  register: ald_result

- name: Создание контроллера домена
  block:
  - name: Установка пакетов необходимых для создания контроллера домена
    apt:
      name:
      - ald-server-common
      - ald-admin
      - fly-admin-ald
      - smolensk-security-ald
      state: latest
      update_cache: yes
 
  - name: Удаление лишних пакетов
    apt:
      autoremove: yes
      
  - name: Копирование файлов для создания энтропии на VM
    copy:
      src: "{{ item }}"
      dest: '/tmp/'
      force: no
      mode: 644
    with_items:
    - haveged_1.9.1-1_amd64_signed.deb
    - libhavege1_1.9.1-1_amd64_signed.deb

  - name: Установка пакетов для создания энтропии на VM
    shell: "dpkg -i --force-all /tmp/{{ item }}"
    with_items:
    - haveged_1.9.1-1_amd64_signed.deb
    - libhavege1_1.9.1-1_amd64_signed.deb

  - name: Внесение изменений в файл /etc/ald/ald.conf
    lineinfile:
      dest: /etc/ald/ald.conf
      regexp: "{{ item.do }}"
      line: "{{ item.posle }}"
    with_items:
    - { do: 'DOMAIN=', posle: 'DOMAIN=.{{ domain }}'}
    - { do: 'SERVER=', posle: "SERVER={{ inventory_hostname }}.{{ domain }}"}
    - { do: 'DESCRIPTION=', posle: 'DESCRIPTION={{ inventory_hostname }}'}
    - { do: 'NETWORK_FS_TYPE=', posle: 'NETWORK_FS_TYPE=none'}
    - { do: 'CLIENT_ON=', posle: 'CLIENT_ON=1'}
    - { do: 'SERVER_ID=', posle: 'SERVER_ID=1'}
    - { do: 'SERVER_ON=', posle: 'SERVER_ON=1'}

  - name: Создание временного файла пароленй /tmp/aldpassserver
    template:
      src: aldpassserver
      dest: /tmp/
      mode: 0400
      owner: root

  - name: Создание временного файла пароленй /tmp/aldpassclient
    template:
      src: aldpassclient
      dest: /tmp/
      mode: 0400
      owner: root

  - name: Наполнение временного файла пароленй /tmp/add users
    lineinfile:
      path: /tmp/aldpassserver
      line: "{{ item.0 }}:{{ item.1 }}"
    with_together:
    - "{{ users }}"
    - "{{ users_pass }}"

  - name: Удаление папки /ald_home
    file:
      state: absent
      path: /ald_home/

  - name: Инициализация домена (Может завершиться с ошибкой если на сервере мало энтропии)
    shell: ald-init init --pass-file=/tmp/aldpassserver -f

  - name: Создадим пользователей ALD из списка
    shell: "ald-admin user-add {{ item }} --home-type=' ' --home-server=' ' --home=/ald_home/{{ item }}' ' --login-shell=/bin/bash --gecos={{ item }},,, --policy=default --pass-file=/tmp/aldpassserver -f"
    with_items:
    - "{{ users }}"

  - name: Зададим мандатный уровень доступа
    shell: "ald-admin user-mac {{ item }} --reset --min-lev-int=0 --max-lev-int=3 -f --pass-file=/tmp/aldpassserver -f" 
    with_items:
    - "{{ users }}"

#  - name: Добавим хосты в ALD
#    shell: "ald-admin user-ald-cap {{ item }} --add-hosts --host-group='Domain Computers'  --pass-file=/tmp/aldpassserver -f"
#    with_items:
#    - "{{ users }}"

#  - name: Удалим ключи
#    file:
#      state: absent
#      path: /home/{{ ansible_ssh_user }}/{{ item }}.keytab
#    with_items:
#      - aldd
#      - krb5

#  - name: Добавим хосты 1.6 в ALD
#    shell: |
#           ald-admin service-add host/{{item}}.{{domain}} --pass-file=/tmp/aldpassclient -f
#           ald-admin service-add aldd/{{item}}.{{domain}} --pass-file=/tmp/aldpassclient -f
#           echo -e 'addprinc -randkey host/{{item}}.{{domain}}' | kadmin.local
#           echo -e 'ktadd -k krb5.keytab host/{{item}}.{{domain}}' | kadmin.local
#           echo -e 'ktadd -k aldd.keytab aldd/{{item}}.{{domain}}' | kadmin.local
#    with_items: "{{ groups['ald-client'] }}"

#  - name: Заберем ключи
#    fetch:
#      src: /home/{{ ansible_ssh_user }}/{{ item }}.keytab
#      dest: /tmp/
#      flat: yes
#    with_items:
#      - aldd
#      - krb5

  - name: Перезагрузим сервер
    reboot:
      reboot_timeout=300

  when: 
  - not ald_result.stat.exists
  - inventory_hostname in groups['ald-server']

- name: Пдключение к контроллеру домена
  block:    

  - name: Установка пакетов ALD-client (версия 1.5)
    apt:
      name:
      - ald-client-common
      state: latest
      update_cache: yes

  - name: ald.conf
    lineinfile:
      dest: /etc/ald/ald.conf
      regexp: "{{ item.do }}"
      line: "{{ item.posle }}"
    with_items:
    - { do: 'DOMAIN=', posle: 'DOMAIN=.{{ domain }}'}
    - { do: 'SERVER=', posle: "SERVER={{ ald_srv }}.{{ domain }}"}
    - { do: 'DESCRIPTION=', posle: 'DESCRIPTION={{ inventory_hostname }}'}
    - { do: 'SERVER_ID=', posle: "SERVER_ID={{ ansible_ssh_host.split('.')[3] }}"}
    - { do: 'NETWORK_FS_TYPE=', posle: 'NETWORK_FS_TYPE=none'}
    - { do: 'CLIENT_ON=', posle: 'CLIENT_ON=1'}
    - { do: 'SERVER_ON=', posle: 'SERVER_ON=0'}

  - name: Удаление папки /ald_home
    file:
      state: absent
      path: /ald_home/

  - name: copy aldpassclient
    template:
      src: aldpassclient
      dest: /tmp/aldpassclient
      mode: 0400
      owner: root

  - name: client join
    shell: ald-client join {{ ald_srv }}.{{ domain }} --pass-file=/tmp/aldpassclient -f
  
  when: 
  - not ald_result.stat.exists
  - inventory_hostname in groups['ald-client']
