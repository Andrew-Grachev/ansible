---

- name: Проверка наличия файла '/etc/samba/samba.keytab'
  stat:
    path: /etc/samba/samba.keytab
  register: samba_result

- name: Развертывание кластера Samba
  block:

  - name: Инсталляция пакетов Samba на сервере
    apt_rpm:
      update_cache: true
      package:
      - samba
      - samba-client
      state: present

  - name: Добавление сервиса CIFS на контроллере домена
    become: true
    become_method: su
    become_user: admin
    command: ipa service-add cifs/{{ inventory_hostname }}.{{ domain }}
    vars:
      ansible_become_pass: '{{ pass.admin }}'
    ignore_errors: yes

  # - name: Создание прав для серверов кластера '{{ item.name }}'
    # become: true
    # become_method: su
    # become_user: admin
    # shell: |
      # ipa permission-add "CIFS server can read user passwords" --attrs={ipaNTHash,ipaNTSecurityIdentifier} --type=user --right={read,search,compare} --bindtype=permission
      # ipa privilege-add "CIFS server privilege"
      # ipa privilege-add-permission "CIFS server privilege" --permission="CIFS server can read user passwords"
      # ipa role-add "CIFS server"
      # ipa role-add-privilege "CIFS server" --privilege="CIFS server privilege"
    # vars:
      # ansible_become_pass: '{{ pass.admin }}'
    # ignore_errors: yes
    # when: inventory_hostname == item.srv[0]

  # - name: Добавление прав для серверов кластера '{{ item.name }}'
    # become: true
    # become_method: su
    # become_user: admin
    # shell: ipa role-add-member "CIFS server" --services=cifs/{{ inventory_hostname }}.{{ domain }}
    # vars:
      # ansible_become_pass: '{{ pass.admin }}'
    # ignore_errors: yes

  # - name: Создание группы '{{ item.samba.group }}' с правами доступа к Samba шаре '{{ item.samba.name }}'
    # become: true
    # become_method: su
    # become_user: admin
    # shell: ipa group-add {{ item.samba.group }} --desc="Пользователи Samba"
    # vars:
      # ansible_become_pass: '{{ pass.admin }}'
    # ignore_errors: yes
    # when: inventory_hostname == item.srv[0]

  # - name: Добавим пользователя 'admin' в группу '{{ item.samba.group }}'
    # become: true
    # become_method: su
    # become_user: admin
    # shell: ipa group-add-member {{ item.samba.group }} --users=admin
    # vars:
      # ansible_become_pass: '{{ pass.admin }}'
    # ignore_errors: yes
    # when: inventory_hostname == item.srv[0]

  # - name: Создание папки '{{ item.samba.path }}'
    # file:
      # state: directory
      # path: '{{ item.samba.path }}'
      # mode: 0777
      # owner: nobody
      # group: nogroup
      # recurse: yes

  # - name: Создание структуры папок на СХД (на первой ноде)
    # shell: |
      # mount {{ item.samba.dev }} {{ item.samba.path }}
      # rm -r {{ item.samba.path }}/*
      # mkdir {{ item.samba.path }}/s0
      # mkdir {{ item.samba.path }}/s1
      # mkdir {{ item.samba.path }}/s2
      # mkdir {{ item.samba.path }}/s3
      # chown -R admin:{{ item.samba.group }} {{ item.samba.path }}
      # chmod -R 777 {{ item.samba.path }}
      # pdpl-file 3:0:-1:ccnr {{ item.samba.path }}
      # pdpl-file 0:0:0 {{ item.samba.path }}/s0
      # pdpl-file 1:0:0 {{ item.samba.path }}/s1
      # pdpl-file 2:0:0 {{ item.samba.path }}/s2
      # pdpl-file 3:0:0 {{ item.samba.path }}/s3
      # umount {{ item.samba.path }}
    # when: inventory_hostname == item.srv[0]

  # - name: Получение таблицы ключей
    # become: true
    # become_method: su
    # become_user: admin
    # shell: sudo ipa-getkeytab -s {{ freeipa.srv }}.{{ domain }} -p cifs/{{ inventory_hostname }}.{{ domain }} -k /etc/samba/samba.keytab
    # vars:
      # ansible_become_pass: '{{ pass.admin }}'
    # ignore_errors: yes

  # - name: Копирование конфигураций Samba (Имя сервера С1N1 прописано руками!)
    # template: 
      # src: smb.j2
      # dest: /etc/samba/smb.conf
      # force: yes
    # vars:
      # id_range: "{{hostvars['c1n1']['idrange'].stdout}}"

  # - name: Настроить идентификатор безопасности домена (Имя сервера С1N1 прописано руками!)
    # become: true
    # become_method: su
    # become_user: admin
    # shell: sudo net setdomainsid {{ domains_id }}
    # vars:
      # ansible_become_pass: '{{ pass.admin }}'
      # domains_id: "{{hostvars['c1n1']['domainsid'].stdout}}"
    # ignore_errors: yes

  # - name: Настройка служб и выключение их
    # service:
      # name: '{{ service }}'
      # state: stopped
      # enabled: no
    # with_items:
      # - smbd
      # - winbind
    # loop_control:
      # loop_var: service

  # - name: Развертывание кластера Samba на первой ноде
    # block:

    # - name: Добавление дискового ресурса кластера расположенного на '{{ item.samba.dev }}' как ресурс 'SambaShare_Data'
      # shell: |
        # pcs resource create SambaShare_Data ocf:heartbeat:Filesystem directory={{ item.samba.path }} device={{ item.samba.dev }} fstype=ext4

    # - name: Объявление зависимости 'SambaShare_Data' от '{{ item.name }}_IP_V4'
      # shell: |
        # pcs constraint colocation add SambaShare_Data with {{ item.name }}_IP_V4 INFINITY 
        # pcs constraint order {{ item.name }}_IP_V4 then SambaShare_Data
        # pcs cluster start --all

    # - name: Добавление ресурсов 'Samba' в кластер
      # shell: |
        # pcs resource create SambaShare_Service_{{ service }} systemd:{{ service }}
        # pcs constraint colocation add SambaShare_Service_{{ service }} with SambaShare_Data INFINITY
        # pcs constraint order SambaShare_Data then SambaShare_Service_{{ service }}
        # pcs cluster start --all
      # with_items:
        # - smbd
        # - winbind
      # loop_control:
        # loop_var: service

    # when: inventory_hostname == item.srv[0]

  - name: Перезагрузка ОС
    reboot:
      msg: 'Reboot'

  when:
    - inventory_hostname in smb.srv
    - not samba_result.stat.exists

...