---

- name: Установка и настройка CephFS
  block:

  - name: Проверка наличия 'ssh' ключа '/home/{{ ansible_ssh_user }}/.ssh/id_rsa'
    stat:
      path: /home/{{ ansible_ssh_user }}/.ssh/id_rsa
    register: ssh_result
    ignore_errors: yes

  - name: Настройка 'ssh' для пользователя {{ ansible_ssh_user }} на серверах кластера 'CephFS'
    block:

    - name: Инсталляция пакета 'sshpass'
      apt_rpm:
        name: sshpass
        update_cache: yes

    - name: Внесение изменений в конфигурационныйе файл '/etc/openssh/ssh_config'
      lineinfile:
        dest: /etc/openssh/ssh_config
        regexp: 'StrictHostKeyChecking'
        line: '    StrictHostKeyChecking  no'

    - name: Перезапуск службы 'sshd'
      service:
        name: sshd
        enabled: yes
        state: restarted

    - name: Удаление ssh ключей
      shell: rm -Rf /home/{{ ansible_ssh_user }}/.ssh/id_rsa*
      ignore_errors: yes

    - name: Генерация ssh ключа '/home/{{ ansible_ssh_user }}/.ssh/id_rsa'
      shell: echo -e "\n" | ssh-keygen -q -t rsa -f /home/{{ ansible_ssh_user }}/.ssh/id_rsa -C "" -N ""
      become: no
  
    - name: Обмен ключами между узлами кластера
      shell: |
        {% for item in cephfs.srv %}
        sshpass -p '{{ ansible_ssh_pass }}' ssh-copy-id -i /home/{{ ansible_ssh_user }}/.ssh/id_rsa.pub -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ ansible_ssh_user }}@{{ hostvars[item].ansible_ssh_host }}
        {% endfor %}
      ignore_errors: yes

    when: not ssh_result.stat.exists

  - name: Инсталляция 'Ceph' на узлах кластера
    block:

    - name: Инсталляция пакета 'ceph-deploy'
      apt_rpm:
        name:
        - ceph-deploy
        - ceph-mgr-dashboard
        update_cache: yes

    - name: Инсталляция Ceph на узлах кластера
      shell: |
        ceph-deploy install --mon --osd --mgr {{ cephfs.srv | join(' ') }}
      when: inventory_hostname == cephfs.srv[0]
      become: no

    - name: Перезагрузка узлов кластера
      reboot:
        msg: 'Reboot'

  - name: Настройка 'Ceph' кластера
    block:

    - name: Создаем конфигурационный файл '/home/{{ ansible_ssh_user }}/ceph.conf'
      shell: |
        ceph-deploy new {{ cephfs.srv | join(' ') }}
      become: no

    - name: Добавление сетей в конфигурацию кластера '/home/{{ ansible_ssh_user }}/ceph.conf'
      blockinfile:
        dest: '/home/{{ ansible_ssh_user }}/ceph.conf'
        block: |
          public_network = {{ net.network }}
          cluster_network = {{ cephfs.cluster_network }}
      become: no

    - name: Создание мониторов
      shell: |
        ceph-deploy mon create {{ cephfs.srv | join(' ') }}
        sleep 10
      become: no

    - name: Обмен ключами
      shell: |
        ceph-deploy gatherkeys {{ cephfs.srv | join(' ') }}
      become: no

    - name: Зарегистрировать службу диспетчера Ceph на узлах кластера
      shell: |
        ceph-deploy mgr create {{ cephfs.srv | join(' ') }}
      become: no

    - name: Install Metadata Server Daemon - сервер метаданных
      shell: |
        ceph-deploy install --mds {{ cephfs.srv | join(' ') }}
        ceph-deploy mds create {{ cephfs.srv | join(' ') }}
      become: no

    - name: Создать OSD на дисках узлов кластера и добавить их в кластер
      shell: |
        ceph-deploy osd create --data {{ cephfs.dev[0] }} {{ item }}
        ceph-deploy osd create --data {{ cephfs.dev[1] }} {{ item }}
      with_items: '{{ cephfs.srv }}'
      become: no

    - name: Копирование ключей в '/etc/ceph/'
      shell: |
        cp /home/{{ ansible_ssh_user }}/ceph.*.keyring /etc/ceph/

    - name: insecure allow
      shell: |
        ceph config set mon auth_allow_insecure_global_id_reclaim false
        ceph config set mon mon_warn_on_insecure_global_id_reclaim false
        ceph config set mon mon_warn_on_insecure_global_id_reclaim_allowed false

    - name: create polls 'k8sfs'
      shell: |
        ceph osd pool create k8sfs_data 64
        ceph osd pool create k8sfs_metadata 64
        ceph fs new cephfs k8sfs_metadata k8sfs_data

    - name: create polls 'kubernetes'
      shell: |
        ceph osd pool create kubernetes 64
        ceph auth add client.kubernetes mon 'allow r' osd 'allow rwx pool=kubernetes,allow rwx pool=k8sfs_data' mds 'allow rw'
        rbd pool init kubernetes

    - name: Указать, что в качестве  административной рабочей станции будет выступать фронтальная машина
      shell: |
        ceph-deploy admin {{ cephfs.srv[0] }}
      become: no

    - name: Установить клиентские инструментальные средства Ceph на фронтальную машину
      shell: |
        ceph-deploy install --cli {{ cephfs.srv[0] }}
      become: no

    # - name: Установить Web-админку
      # shell: |
        # ceph mgr module enable dashboard


    when: inventory_hostname == cephfs.srv[0]

  when: inventory_hostname in cephfs.srv

...

# Web-админка
# ceph mgr module disable dashboard
# ceph mgr module enable dashboard
# sudo ceph config set mgr mgr/dashboard/server_addr 192.168.1.207
# sudo ceph config set mgr mgr/dashboard/server_port $PORT
# sudo ceph config set mgr mgr/dashboard/ssl_server_port 8443
# echo 12345678 > /tmp/pass
# sudo ceph dashboard ac-user-create admin administrator -i /tmp/pass
# sudo radosgw-admin user create --uid=admin --display-name=admin --system
# echo 3YIF91NX6X35GBRPSKV0 > /tmp/key
# sudo ceph dashboard set-rgw-api-access-key -i /tmp/key
# echo h7tJuIy3hUCU9yU7FGwcJKJKYLLYQVirmAzmAVsC /tmp/key
# sudo ceph dashboard set-rgw-api-access-key -i /tmp/key
# sudo ceph dashboard create-self-signed-cert

# rest-api
# ceph-deploy install --rgw {{ cephfs.srv | join(' ') }}
# ceph-deploy rgwmds create {{ cephfs.srv | join(' ') }}

# Test
# watch sudo ceph -s
# sudo ceph osd df
# sudo ceph osd tree
