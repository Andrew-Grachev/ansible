---

- name: Чтение статуса 'LVM'
  shell: kubectl get pods -n csi-lvm-system | grep 'csi-driver-lvm' | grep 'Running'
  register: status_lvm
  become: false
  ignore_errors: yes

- name:
  block:

  - name: Создание пространства имен для 'LVM Provisioner'
    kubernetes.core.k8s:
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: "{{ k8s.lvm_provisioner.namespace }}"
          labels:
            pod-security.kubernetes.io/enforce: privileged
      state: present

  - name: Создание LVM Provisioner CSIDriver
    kubernetes.core.k8s:
      state: present
      force: true
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition: "{{ lookup('template', 'services/lvm/lvm_common.yaml') }}"

  - name: Создание LVM provisioner controller deployment
    kubernetes.core.k8s:
      state: present
      force: true
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition: "{{ lookup('template', 'services/lvm/lvm_controller.yaml') }}"

  - name: Создание LVM provisioner plugin deployment
    kubernetes.core.k8s:
      state: present
      force: true
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition: "{{ lookup('template', 'services/lvm/lvm_plugin.yaml') }}"

  - name: Создание LVM provisioner StorageClass
    kubernetes.core.k8s:
      state: present
      force: true
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition: "{{ lookup('template', 'services/lvm/lvm_storageclass.yaml') }}"

  when:
    - k8s.lvm_provisioner.namespace == 'csi-lvm-system'
    - status_lvm.stdout == ''

...




# ---

# - name:
  # block:

  # - name: Create namespace for LVM provisioner
    # tags: ['common','ns']
    # k8s:
      # kubeconfig: "~/.kube/config"
      # definition:
        # apiVersion: v1
        # kind: Namespace
        # metadata:
          # name: "{{ lvm_provisioner_namespace }}"
          # labels:
            # pod-security.kubernetes.io/enforce: privileged
      # state: present

  # - name: Create pods for lvm init
    # k8s:
      # state: present
      # force: no
      # kubeconfig: "~/.kube/config"
      # definition: "{{ lookup('template', '{{ role_path }}/files/lvm_init.yaml') }}"

  # - name: Wait till the Object is created
    # kubernetes.core.k8s_info:
      # kind: Pod
      # wait: yes
      # name: csi-sanlock-lvm-init
      # namespace: "{{ lvm_provisioner_namespace }}"
      # wait_sleep: 10
      # wait_timeout: 360

  # - name: Adjust your devices before running this!
    # shell: kubectl -n {{ lvm_provisioner_namespace }}  exec csi-sanlock-lvm-init -- vgcreate --shared {{ lvm_provisioner_vg_name }} {{ lvm_provisioner_disk }}

  # - name: Create the csl-rpc-data logical volume.
    # shell: kubectl -n {{ lvm_provisioner_namespace }}  exec csi-sanlock-lvm-init -- lvcreate -L 8m -n csl-rpc-data --add-tag csi-sanlock-lvm.vleo.net/rpcRole=data {{ lvm_provisioner_vg_name }}

  # - name: Change the csl-rpc-data logical volume.
    # shell: kubectl -n {{ lvm_provisioner_namespace }}  exec csi-sanlock-lvm-init -- lvchange -a n {{ lvm_provisioner_vg_name }}/csl-rpc-data

  # - name: Create the csl-rpc-lock logical volume.
    # shell: kubectl -n {{ lvm_provisioner_namespace }}  exec csi-sanlock-lvm-init -- lvcreate -L 512b -n csl-rpc-lock --add-tag csi-sanlock-lvm.vleo.net/rpcRole=lock {{ lvm_provisioner_vg_name }}

  # - name: Change the csl-rpc-lock logical volume.
    # shell: kubectl -n {{ lvm_provisioner_namespace }}  exec csi-sanlock-lvm-init -- lvchange -a n {{ lvm_provisioner_vg_name }}/csl-rpc-lock

  # - name: delete pod
    # shell: kubectl -n {{ lvm_provisioner_namespace }}  delete po csi-sanlock-lvm-init

  # - name: Install the csi-sanlock-lvm driver.
    # shell: kubectl apply -k "https://github.com/aleofreddi/csi-sanlock-lvm/deploy/kubernetes?ref=v0.4.5"

  # - name: Create StorageClass
    # k8s:
      # state: present
      # force: no
      # kubeconfig: "~/.kube/config"
      # definition: "{{ lookup('template', '{{ role_path }}/files/lvm_storageclass.yaml') }}"

  # - name: Create config
    # k8s:
      # state: present
      # force: no
      # kubeconfig: "~/.kube/config"
      # definition: "{{ lookup('template', '{{ role_path }}/files/lvm_config.yaml') }}"
      # ignore_errors: yes

  # - name: Create config snapshoter
    # k8s:
      # state: present
      # force: no
      # kubeconfig: "~/.kube/config"
      # definition: "{{ lookup('template', '{{ role_path }}/files/lvm_volumesnapshotclass.yaml') }}"
      # ignore_errors: yes

  # when: lvm_provisioner_namespace == "csi-lvm-system-sanlock"
