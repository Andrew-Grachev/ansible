---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: registry
  namespace: "{{ registry_namespace }}"
spec:
  selector:
    matchLabels:
      app: registry
#  serviceName: registry
  replicas: 1
  template:
    metadata:
      labels:
        app: registry
    spec:
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      terminationGracePeriodSeconds: 10
      containers:
        - name: registry
          image: docker.io/registry:latest
          ports:
            - name: registry
              containerPort: 5000
          env:
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: /cert/tls.crt
            - name: REGISTRY_HTTP_TLS_KEY
              value: /cert/tls.key
            - name: REGISTRY_AUTH
              value: htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: /auth/htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: Registry Realm
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry
            - name: tls
              readOnly: true
              mountPath: "/cert"
            - name: auth
              readOnly: true
              mountPath: "/auth"
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: registry-pvc
      - name: tls
        secret:
          defaultMode: 420
          secretName: registry-cert
      - name: auth
        secret:
          defaultMode: 420
          secretName: registry-auth

