---

# - name: Проверка наличия установленного Dr.Web сервер
  # stat:
    # path: /etc/opt/drweb.com/software/drweb-esuite.remove
  # register: drweb_server_result

- name: Установка и настройка Kaspersky Security Center Linux
  block:

  - name: Установка PostgreSQL
    apt:
      name:
      - postgresql-astra
      - postgresql-se-test-9.6
      state: latest

  - name: Внесение изменений в /etc/postgresql/9.6/main/postgresql.conf
    lineinfile: 
      dest: /etc/postgresql/9.6/main/postgresql.conf
      regexp: '^{{ line.src }}'
      insertbefore: BOF
      line: '{{ line.dest }}'
    with_items:
      - { src: "listen_addresses",                  dest: "listen_addresses = '*'                  # Развертывание KSCL" }
      - { src: "#temp_buffers",                     dest: "temp_buffers = 24MB                     # Развертывание KSCL" }
      - { src: "max_connections",                   dest: "max_connections = 151                   # Развертывание KSCL" }
      - { src: "#work_mem",                         dest: "work_mem = 16MB                         # Развертывание KSCL" }
      - { src: "#max_parallel_workers_per_gather",  dest: "max_parallel_workers_per_gather = 0     # Развертывание KSCL" }
      - { src: "#maintenance_work_mem",             dest: "maintenance_work_mem = 128 MB           # Развертывание KSCL" }
      - { src: "shared_buffers",                    dest: "shared_buffers = 1GB                    # Развертывание KSCL" }
      - { src: "#work_mem",                         dest: "work_mem = 16MB                         # Развертывание KSCL" }
    loop_control:
      loop_var: line
     
  - name: Внесение изменений в /etc/postgresql/9.6/main/pg_hba.conf
    shell: |
      sed -i '/KSCL'/d /etc/postgresql/9.6/main/pg_hba.conf
      sed -i '/is for Unix/a local     {{ kav.db.name }}       {{ kav.db.user }}                               trust  # Настройки для KSCL' /etc/postgresql/9.6/main/pg_hba.conf
      sed -i '/# IPv4/a host      {{ kav.db.name }}       {{ kav.db.user }}            127.0.0.1/32       pam    # Настройки для KSCL' /etc/postgresql/9.6/main/pg_hba.conf
      sed -i '/# IPv4/a host      {{ kav.db.name }}     {{ kav.db.user }}        {{ hostvars[kav.srv].ansible_ssh_host }}/24    pam    # Настройки для KSCL' /etc/postgresql/9.6/main/pg_hba.conf
      sed -i 's/localhost/*/g' /etc/postgresql/9.6/main/postgresql.conf

  - name: Создание БД 'KAV'
    shell: |
      sudo -u postgres psql -c 'DROP DATABASE IF EXISTS {{ kav.db.name }};'
      sudo -u postgres psql -c 'DROP ROLE IF EXISTS {{ kav.db.user }};'
      sudo -u postgres psql -c 'CREATE ROLE {{ kav.db.user }} WITH LOGIN PASSWORD $${{ kav.db.pass }}$$;'
      sudo -u postgres psql -c 'CREATE DATABASE {{ kav.db.name }} ENCODING UTF8 OWNER {{ kav.db.user }};'
      sudo -u postgres psql -c 'GRANT ALL ON DATABASE {{ kav.db.name }} to {{ kav.db.user }};'
      usermod -a -G shadow postgres
      setfacl -d -m u:postgres:r /etc/parsec/macdb
      setfacl -R -m u:postgres:r /etc/parsec/macdb
      setfacl -m u:postgres:rx /etc/parsec/macdb
      setfacl -d -m u:postgres:r /etc/parsec/capdb
      setfacl -R -m u:postgres:r /etc/parsec/capdb
      setfacl -m u:postgres:rx /etc/parsec/capdb

  - name: Перезапускаем службу postgresql
    service:
      name: postgresql
      state: restarted

  - name: Создание группы '{{ kav.admin.group }}'
    group:
      name: '{{ kav.admin.group }}'

  - name: Добавим пользователя '{{ kav.admin.user }}' в группу '{{ kav.admin.group }}'
    user:
      name: '{{ kav.admin.user }}'
      password: "{{ kav.admin.pass | password_hash('sha512') }}"
      groups: '{{ kav.admin.group }}'
      shell: /bin/bash
      home: '/home/{{ kav.admin.user }}'
      append: yes

  - name: Создание файла ответов '/tmp/answers.txt'
    template:
      src: answers.j2
      dest: /tmp/answers.txt

  - name: Создание файла тихой инсталяции '/tmp/install.sh'
    template:
      src: install.j2
      dest: /tmp/install.sh
      mode: 0777

  - name: Копирование
    copy:
      src: '../../../../software/kav/{{ kav.srv_deb }}'
      dest: '/tmp/{{ kav.srv_deb }}'
      force: no

  # - name: Install 
    # apt:
      # deb: '/tmp/{{ kav.srv_deb }}'



  when: 
    #- not drweb_server_result.stat.exists
    - inventory_hostname == kav.srv


 # - name: Удаление сервера
   # shell: |
      # cd /etc/opt/drweb.com/software
      # ./drweb-esuite.remove
      # ./drweb-esuite-extra.remove

  # - name: Установка пакетов
    # apt:
      # name:
      # - astra-digsig-oldkeys
      # state: latest
      # update_cache: yes

  # - name: Копирование дистрибутива
    # copy:
      # src: '../../../../software/dr_web/{{ drweb_server_dist }}'
      # dest: /tmp/
      # mode: '0777'
      # force: no

  # - name: Копирование дистрибутива Extra
    # copy:
      # src: '../../../../software/dr_web/{{ drweb_server_extra }}'
      # dest: /tmp/
      # mode: '0777'
      # force: no

  # - name: Создание конфига установки
    # template:
      # src: drweb-server-preseed
      # dest: /tmp

  # - name: Установка сервера
    # shell: |
      # cd /tmp
      # ./{{ drweb_server_dist }} -- --preseed /tmp/drweb-server-preseed
      # ./{{ drweb_server_extra }}

  # - name: Перзапуск сервиса
    # service:
      # name: drwcsd
      # enabled: yes
      # state: restarted

  # - name: Login & Password
    # debug:
      # msg: 'URL:https://{{ drweb_ip }}:9081  Login:admin  Password:{{drweb_pwd}}'

# Сброс пароля
# /opt/drwcs/bin/drwidbsh3 /var/opt/drwcs/database.sqlite
# update admins set password='qwerty' where login='admin';
# .exit




# - name: Проверка наличия установленного Dr.Web агента
  # stat:
    # path: /opt/drweb.com/bin/uninst.sh
  # register: drweb_agent_result

# - name: Установка и настройка Dr.Web агента
  # block:

  # - name: Установка пакетов
    # apt:
      # name:
      # - astra-digsig-oldkeys
      # state: latest
      # update_cache: yes

  # - name: Копирование дистрибутива
    # copy:
      # src: '../../../../software/dr_web/{{ drweb_agent_dist }}'
      # dest: /tmp/
      # mode: '0777'
      # directory_mode: yes
      # force: yes

  # - name: Скачиваем сертификат сервера
    # get_url:
      # url: 'https://{{ drweb_ip }}:9081/install/drwcsd-certificate.pem'
      # dest: /tmp/drwcsd-certificate.pem
      # validate_certs: no

  # - name: Отключение от сервера
    # shell: drweb-ctl esdisconnect
    # ignore_errors: yes

  # - name: Удаление старого клиента
    # shell: 'cd /opt/drweb.com/bin && echo Y | ./uninst.sh'
    # ignore_errors: yes

  # - name: Установка клиента
    # shell: cd /tmp && ./{{ drweb_agent_dist }} -- --non-interactive
    # ignore_errors: yes

  # - name: Подключение клиента к серверу
    # shell: 'drweb-ctl esconnect {{ drweb_srv }} --Newbie --Certificate /tmp/drwcsd-certificate.pem'

  # - name: Создание папки ключей
    # file:
      # state: directory
      # path: "/etc/digsig/keys/legacy/keys"

  # - name: Загрузка сертификата антивирурса для работы в ЗПС
    # copy:
      # src: '/opt/drweb.com/share/doc/{{ item }}'
      # dest: /etc/digsig/keys/legacy/keys/
      # mode: 0444
      # remote_src: yes
    # with_items:
    # - digsig.gost.gpg
    # - digsig.primary_key_2010.gpg

  # - name: Инициализация установленных ключей
    # shell: update-initramfs -u -k all

  # when: not drweb_agent_result.stat.exists

# - name: Удаление файлов
  # shell: rm /tmp/drw*
  # ignore_errors: yes
  
...