---
- name: Чтение версии установленного ПО
  shell: cat /opt/distr/software.conf | grep ALD-client
  register: version
  ignore_errors: yes

- name: Установка пакетов ALD-client
  apt:
    name:
    - ald-client-common
    state: latest
    update_cache: yes
  when: version.stdout != relis
  ignore_errors: yes

- name: ald.conf
  lineinfile:
    dest: /etc/ald/ald.conf
    regexp: "{{ item.do }}"
    line: "{{ item.posle }}"
  with_items:
  - { do: 'DOMAIN=', posle: 'DOMAIN=.{{ domain }}'}
  - { do: 'SERVER=', posle: "SERVER={{ ald_srv }}.{{ domain }}"}
  - { do: 'DESCRIPTION=', posle: 'DESCRIPTION={{ inventory_hostname }}'}
  - { do: 'SERVER_ID=', posle: "SERVER_ID={{ ansible_ssh_host.split('.')[3] }}"}
  - { do: 'NETWORK_FS_TYPE=', posle: 'NETWORK_FS_TYPE=none'}
  - { do: 'CLIENT_ON=', posle: 'CLIENT_ON=1'}
  - { do: 'SERVER_ON=', posle: 'SERVER_ON=0'}
  when: version.stdout != relis

- name: Удаление папки /ald_home
  file:
    state: absent
    path: /ald_home/
  when: version.stdout != relis

- name: copy aldpassclient
  template:
    src: aldpassclient
    dest: /tmp/aldpassclient
    mode: 0400
    owner: root
  when: version.stdout != relis

- name: client join
  shell: ald-client join {{ ald_srv }}.{{ domain }} --pass-file=/tmp/aldpassclient -f
  when: version.stdout != relis

- name: Запишем новую версию ПО (Update)
  become: true
  shell: "sed -i '/ALD-client/d' /opt/distr/software.conf && echo '{{ relis }}' >> /opt/distr/software.conf"
  when: version.stdout != relis
  ignore_errors: yes
