---

- name: Установка и настройка Zabbix сервер
  block:

  - name: Проверка наличия установленного Zabbix
    stat:
      path: /etc/zabbix/zabbix_server.conf.d/zabbix_server.conf
    register: zabbix_result

  - name: Установка и настройка Zabbix сервер
    block:

    - name: Настройка конфигурации Parsec
      shell: 'sed -i "s/zero_if_notfound: no/zero_if_notfound: yes/g" /etc/parsec/mswitch.conf'

    - name: Обновление репозиториев
      apt:
        update_cache: yes

    - name: Получение версии 'PHP'
      shell: |
        apt-cache show php | grep Depends | awk '{print substr($2,4)}'
      register: tmp

    - name: Запись доступной версии 'PHP' в переменную 'php_version'
      set_fact:
        php_version: '{{ tmp.stdout_lines[0] }}'

    - name: Получение версии 'PostgreSQL'
      shell: |
        apt-cache show postgresql | grep Depends | awk '{print substr($2,12)}'
      register: tmp

    - name: Запись доступной версии 'PostgreSQL' в переменную 'postgresql_version'
      set_fact:
        postgresql_version: '{{ tmp.stdout_lines[0] }}'

    - name: Инсталляция необходимых пакетов для Zabbix сервера
      apt:
        name:
        - apache2
        - postgresql-{{ postgresql_version }}
        - postgresql-se-test-{{ postgresql_version }}
        - php{{ php_version }}-pgsql
        - libapache2-mod-php{{ php_version }}
        - zabbix-server-pgsql
        - zabbix-frontend-php
        - ipmitool
        - ldap-utils
        - snmp
        - snmpd
        - snmptt
        - snmptrapd
        - iperf
        state: latest
        update_cache: yes

    - name: Удаление папок и файлов
      shell: '{{ item }}'
      with_items:
      - rm -rf /etc/apache2-zabbix
      - rm -rf /var/log/apache2-zabbix
      - rm -f /usr/local/sbin/*zabbix

    # - name: Модифицируем файл '/etc/default/snmptrapd'
      # shell: sed -i "s/TRAPDRUN=no/TRAPDRUN=yes/g" /etc/default/snmptrapd

    - name: Изменение конфигурации SNMPTrap /etc/snmp/snmptrapd.conf
      blockinfile:
        dest: /etc/snmp/snmptrapd.conf
        marker: '### zabbix ###'
        block: |
          authCommunity log,execute,net public
          traphandle default /usr/sbin/snmptthandler

    - name: Внесение изменений в конфигурационныйе файл '/etc/snmp/snmptt.ini'
      shell: |
        sed -i 's/mode = standalone/mode = daemon/g' /etc/snmp/snmptt.ini
        sed -i 's/net_snmp_perl_enable = 0/net_snmp_perl_enable = 1/g' /etc/snmp/snmptt.ini
        sed -i 's/unknown_trap_log_enable = 0/unknown_trap_log_enable = 0/g' /etc/snmp/snmptt.ini
#          mibs_environment = ALL
#          date_time_format = %H:%M:%S %Y/%m/%d

    - name: Изменение конфигурации SNMPTrap /etc/snmp/snmptt.conf
      blockinfile:
        dest: /etc/snmp/snmptt.conf
        marker: '### zabbix ###'
        block: |
          #
          #
          EVENT general .* "General event" Normal
          FORMAT ZBXTRAP $aA $1 $2 $3

    - name: Модифицируем файлы конфигурации Apache2 и PHP
      shell: |
        sh /usr/share/doc/apache2/examples/setup-instance zabbix
        sed -i "s/Listen 80/Listen {{ zabbix.port }}/g" /etc/apache2-zabbix/ports.conf
        sed -i "s/post_max_size = 8M/post_max_size = 32M/g" /etc/php/{{ php_version }}/apache2/php.ini
        sed -i "s/max_execution_time = 30/max_execution_time = 300/g" /etc/php/{{ php_version }}/apache2/php.ini
        sed -i "s/max_input_time = 60/max_input_time = 300/g" /etc/php/{{ php_version }}/apache2/php.ini
        sed -i "s/;date.timezone =/date.timezone = {{ ntp.timezone }}/g" /etc/php/{{ php_version }}/apache2/php.ini
        sed -i "s/# AstraMode on/AstraMode off/g" /etc/apache2-zabbix/apache2.conf

    - name: Добавление виртуального Apache сервера 'Zabbix' 
      blockinfile:
        dest: /etc/apache2-zabbix/sites-available/000-default.conf
        marker: '### zabbix ###'
        block: |
          <VirtualHost {{ hostvars[zabbix.srv].ansible_ssh_host }}:{{ zabbix.port }}>
             ServerName zabbix.{{ domain }}
             ServerAlias zabbix
             ServerAdmin webmaster@localhost
             DocumentRoot /usr/share/zabbix
          </VirtualHost>

    - name: Внесение изменений в '/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf'
      shell: |
        sed -i '/Zabbix'/d /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        sed -i '88 a # Настройки для Zabbix' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        sed -i '88 a host  {{ zabbix_db.name }}  {{ zabbix_db.user }}  127.0.0.1/32  trust  # Настройки для Zabbix' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        sed -i '88 a # Настройки для Zabbix' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf

        #sed -i 's/##/#/g' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        ##sed -i '/# IPv6/i host  {{ zabbix.db_name }}  {{ zabbix.db_user }}  127.0.0.1/32  trust  # Настройки для Zabbix' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        # sed -i '/postgre/s/^/#/' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        # sed -i '/is for Unix/i local	all		postgres				trust       # Настройки для Zabbix' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        # sed -i '/0.0.0.0/s/^/#/' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        # sed -i '/# IPv4/i local	all		all					trust       # Настройки для Zabbix' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        # sed -i '/# IPv6/i host	all		all		{{ hostvars[zabbix.srv].ansible_ssh_host }}/{{ ansible_facts.default_ipv4.netmask }}		trust       # Настройки для Zabbix' /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf

    - name: Внесение изменений в '/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf'
      shell: sed -i 's/shared_buffers = 128 MB/shared_buffers = 1GB/g' /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf

    - name: Предоставить пользователю postgres права читать мандатные метки и категории
      shell: |
        usermod -a -Gshadow postgres
        setfacl -d -mu:postgres:r /etc/parsec/macdb
        setfacl -R -mu:postgres:r /etc/parsec/macdb
        setfacl -mu:postgres:rx /etc/parsec/macdb
        setfacl -d -mu:postgres:r /etc/parsec/capdb
        setfacl -R -mu:postgres:r /etc/parsec/capdb
        setfacl -mu:postgres:rx /etc/parsec/capdb
        pdpl-user -l 0:0 {{ zabbix_db.user }}

    - name: Включаем и перезапускаем службу 'PostgreSQL'
      service:
        name: postgresql
        enabled: yes
        state: restarted

    - name: Удаление БД '{{ zabbix_db.name }}'
      shell: |
        sudo -u postgres psql -c 'DROP DATABASE IF EXISTS {{ zabbix_db.name }};'
        sudo -u postgres psql -c 'DROP ROLE IF EXISTS {{ zabbix_db.name }};'
      ignore_errors: yes

    - name: Создание БД '{{ zabbix_db.name }}'
      shell: |
        sudo -u postgres psql -c 'CREATE DATABASE {{ zabbix_db.name }};'
        sudo -u postgres psql -c 'CREATE ROLE {{ zabbix_db.user }} WITH LOGIN PASSWORD $${{ zabbix_db.password }}$$;'
        sudo -u postgres psql -c 'GRANT ALL ON DATABASE {{ zabbix_db.name }} to {{ zabbix_db.user }};'
        sudo zcat /usr/share/zabbix-server-pgsql/{schema,images,data}.sql.gz | sudo -u {{ zabbix.db_user }} psql {{ zabbix.db_name }}
        sed -i 's/# php_value date.timezone Europe\\/Riga/php_value date.timezone {{ ntp.timezone }}/g' /etc/apache2/conf-available/zabbix-frontend-php.conf
        ln -sf /etc/apache2/conf-available/zabbix-frontend-php.conf /etc/apache2/conf-enabled/zabbix-frontend-php.conf

    - name: Включаем и перезапускаем службу 'apache2@zabbix'
      service:
        name: apache2@zabbix
        enabled: yes
        state: restarted

    - name: Копируем файл конфигурации '/etc/zabbix/zabbix_server.conf.d/zabbix_server.conf'
      template:
        src: zabbix_server.j2
        dest: /etc/zabbix/zabbix_server.conf.d/zabbix_server.conf
        owner: root
        group: root
        mode: 0644

    - name: Копируем файл конфигурации PHP '/etc/zabbix/zabbix.conf.php'
      template:
        src: zabbix.conf.php.j2
        dest: /etc/zabbix/zabbix.conf.php
        mode: 0644

    - name: Включаем и перезапускаем службы
      service:
        name: '{{ item }}'
        state: restarted
        enabled: yes
      with_items:
      - zabbix-server
      - snmpd
      - snmptt
      - snmptrapd

    - name: Добавим 'A' запись 'zabbix' в DNS домена
      become: true
      become_method: su
      become_user: admin
      command: 'ipa dnsrecord-add {{ domain }} zabbix --a-rec {{ hostvars[zabbix.srv].ansible_ssh_host }}'
      vars:
        ansible_become_pass: '{{ freeipa.pass }}'
      ignore_errors: yes

    when: not zabbix_result.stat.exists

  when: inventory_hostname == zabbix.srv

# Установка и настройка Zabbix агента

- name: Проверка наличия установленного Zabbix агента
  stat:
    path: /etc/zabbix/zabbix_agentd.conf.d/zabbix_agent.conf
  register: zabbix_result

- name: Установка и настройка Zabbix агента
  block:

  - name: Установка пакетов Zabbix агента
    apt:
      name:
      - zabbix-agent
      - smartmontools
      - iperf
      state: latest
      update_cache: yes

  - name: Добавляем пользователя zabbix как sudoers
    copy:
      src: zabbix.j2
      dest: /etc/sudoers.d/zabbix
      mode: 0644

  - name: Копирование файла конфигурации 'zabbix_agent.conf'
    template:
      src: zabbix_agent.conf.j2
      dest: /etc/zabbix/zabbix_agentd.conf.d/zabbix_agent.conf
      mode: 0644
      force: yes

  - name: Копирование файла 'UserParameters.conf'
    copy:
      src: UserParameters.conf.j2
      dest: /etc/zabbix/zabbix_agentd.conf.d/UserParameters.conf
      mode: 0644
      force: yes

  - name: Создадим папки для хранения скриптов '/etc/zabbix/scripts'
    file:
      state: directory
      mode: 0755
      recurse: yes
      path: /etc/zabbix/scripts

  # - name: Копирование скриптов для шаблонов
    # copy:
      # src: 'scripts/{{ item }}'
      # dest: '/etc/zabbix/scripts/{{ item }}'
      # force: yes
      # mode: 0755
    # with_items:
      # - bacula_discovery.sh
      # - bacula_check_job.sh
      # - get_gpus_info.sh
      # - bind_stats.py

  - name: Перезапуск службы 'zabbix-agent'
    service:
      name: zabbix-agent
      state: restarted
      enabled: yes

  when: not zabbix_result.stat.exists

...