---

- name: Чтение статуса 'kubernetes-dashboard'
  shell: kubectl get pods -n kubernetes-dashboard | grep 'kubernetes-dashboard' | grep 'Running'
  register: status_dashboard
  become: false
  ignore_errors: yes

- name:
  block:

  # - name: Создание пространства имен 'kubernetes-dashboard'
    # k8s:
      # kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      # definition:
        # apiVersion: v1
        # kind: Namespace
        # metadata:
          # name: kubernetes-dashboard
          # labels:
            # pod-security.kubernetes.io/enforce: privileged
      # state: present

  # - name: Создание учетной записи службы
    # k8s:
      # kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      # definition:
        # apiVersion: v1
        # kind: ServiceAccount
        # metadata:
          # name: admin-user
          # namespace: kubernetes-dashboard
      # state: present

  # - name: Создание ClusterRoleBinding
    # k8s:
      # kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      # definition:
        # apiVersion: rbac.authorization.k8s.io/v1
        # kind: ClusterRoleBinding
        # metadata:
          # name: admin-user
        # roleRef:
          # apiGroup: rbac.authorization.k8s.io
          # kind: ClusterRole
          # name: cluster-admin
        # subjects:
        # - kind: ServiceAccount
          # name: admin-user
          # namespace: kubernetes-dashboard
      # state: present

  # - name: Получение долгосрочного токена на предъявителя для ServiceAccount
    # k8s:
      # kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      # definition:
        # apiVersion: v1
        # kind: Secret
        # metadata:
          # name: admin-user
          # namespace: kubernetes-dashboard
          # annotations:
            # kubernetes.io/service-account.name: "admin-user"
        # type: kubernetes.io/service-account-token
      # state: present

  # - name: Получение токена
    # shell: |
      # kubectl get secret admin-user -n kubernetes-dashboard -o jsonpath={".data.token"} | base64 -d
    # register: k8s_account_token
    # become: false
    
  # - name: 
    # debug:
      # msg: '{{ k8s_account_token.stdout }}'
    # become: false

  - name: Добавление репозитория 'kubernetes-dashboard' для Helm
    kubernetes.core.helm_repository:
      name: kubernetes-dashboard
      repo_url: https://kubernetes.github.io/dashboard/
    become: false

  - name: Развертывание 'Kubernetes Dashboard'
    kubernetes.core.helm:
      create_namespace: true
      dependency_update: true
      name: kubernetes-dashboard
      release_namespace: kubernetes-dashboard
      chart_ref: kubernetes-dashboard/kubernetes-dashboard
      # chart_version: 7.6.1
      # values: "{{ lookup('template', 'templates/helm_charts/dashboard_7_6_1_values.yaml') | from_yaml }}"
    become: false

  - name: 
    debug:
      msg: 'Kubernetes Dashboard: https://dashboard.{{ domain }}'
    become: false

  # when: status_dashboard.stdout == ''

...


# https://www.youtube.com/watch?v=SUk_Nm5BiPw
# helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/
# helm repo list
# helm repo update
# helm search repo -l kubernetes-dashboard/kubernetes-dashboard | head -20
# helm show values kubernetes-dashboard/kubernetes-dashboard --version 7.6.1 > dashboard_7_6_1_values.yaml


#kubectl -n kubernetes-dashboard get ingress
#NAME                   CLASS            HOSTS                  ADDRESS   PORTS     AGE
#kubernetes-dashboard   nginx   dashboard.kube.local             80, 443   28m
