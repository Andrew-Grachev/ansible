---

- name: Чтение статуса 'Ingress'
  shell: kubectl get pods -n ingress-nginx | grep 'ingress-nginx-controller' | grep 'Running'
  register: status_ingress
  become: false
  ignore_errors: yes

- name:
  block:

  - name: Создание пространства имен 'ingress-nginx'
    kubernetes.core.k8s:
      kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      definition:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: ingress-nginx
          labels:
            pod-security.kubernetes.io/enforce: privileged
      state: present

  - name: Добавление репозитория 'nginx' для Helm
    kubernetes.core.helm_repository:
      name: ingress-nginx
      repo_url: https://kubernetes.github.io/ingress-nginx
      force_update: true
    become: false

  - name: Развертывание 'Ingress-Nginx v4.12.0'
    kubernetes.core.helm:
      name: ingress-nginx
      release_namespace: ingress-nginx
      chart_ref: ingress-nginx/ingress-nginx
      chart_version: 4.12.0
      values: "{{ lookup('template', 'Helm_Charts/ingress-nginx.yaml') | from_yaml }}"
      force: true
    become: false


  # - name: Установка 'ingress-nginx'
    # kubernetes.core.k8s:
      # state: present
      # namespace: monitoring
      # force: false
      # kubeconfig: '/home/{{ ansible_ssh_user }}/.kube/config'
      # dependency_update: true
      # definition: "{{ lookup('file', '/ingress/ingress.yaml') }}"

# - name: Label nodes
  # k8s:
    # state: present
    # force: no
    # kubeconfig: "/home/{{ local_admin }}/.kube/config"
    # definition:
      # apiVersion: v1
      # kind: Node
      # metadata:
        # name: "{{ item }}"
        # labels:
          # node-role.kubernetes.io/ingress: ""
  # with_items: "{{ ingress_nodes }}"
  
# - name: Remove webhook
  # k8s:
    # state: absent
    # force: no
    # kubeconfig: "/home/{{ local_admin }}/.kube/config"
    # definition:
      # apiVersion: admissionregistration.k8s.io/v1
      # kind: ValidatingWebhookConfiguration
      # metadata:
        # name: ingress-nginx-admission

  # when: status_ingress.stdout == ''

...