---

- name: Установка и настройка Ceph
  block:

  - name: Проверка наличия 'ssh' ключа '/home/{{ ansible_ssh_user }}/.ssh/id_rsa'
    stat:
      path: /home/{{ ansible_ssh_user }}/.ssh/id_rsa
    register: ssh_result
    ignore_errors: yes

  - name: Настройка 'ssh' для пользователя {{ ansible_ssh_user }} на серверах кластера 'Ceph'
    block:

    - name: Инсталляция пакета 'sshpass'
      dnf:
        name:
        - sshpass

    - name: Внесение изменений в конфигурационныйе файл '/etc/ssh/ssh_config'
      lineinfile:
        dest: /etc/ssh/ssh_config
        regexp: 'StrictHostKeyChecking'
        line: '    StrictHostKeyChecking  no'

    - name: Перезапуск службы 'sshd'
      service:
        name: sshd
        enabled: yes
        state: restarted

    - name: Удаление ssh ключей
      shell: rm -Rf /home/{{ ansible_ssh_user }}/.ssh/id_rsa*
      ignore_errors: yes

    - name: Генерация ssh ключа '/home/{{ ansible_ssh_user }}/.ssh/id_rsa'
      shell: echo -e "\n" | ssh-keygen -q -t rsa -f /home/{{ ansible_ssh_user }}/.ssh/id_rsa -C "" -N ""
      become: no
  
    - name: Обмен ключами между узлами кластера
      shell: |
        {% for item in ceph.srv %}
        sshpass -p '{{ ansible_ssh_pass }}' ssh-copy-id -i /home/{{ ansible_ssh_user }}/.ssh/id_rsa.pub -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ ansible_ssh_user }}@{{ hostvars[item].ansible_ssh_host }}
        {% endfor %}
      become: no

    when: not ssh_result.stat.exists

  - name: Проверка установки 'Ceph'
    stat:
      path: /etc/ceph/ceph.conf
    register: ceph_result
    ignore_errors: yes

  - name: Инсталляция 'Ceph' на узлах кластера
    block:

    - name: Инсталляция пакетов 'Сeph'
      dnf:
        name:
        - ceph-deploy
        - ceph-mgr-dashboard

    - name: Инсталляция демонов 'Ceph' на узлах кластера
      shell: |
        ceph-deploy install {{ ceph.srv | join(' ') }}
      when: inventory_hostname == ceph.srv[0]
      become: no

    - name: Перезагрузка узлов кластера
      reboot:
        msg: 'Reboot'

    - name: Настройка кластера 'Ceph'
      block:

      - name: Создаем конфигурационный файл '/home/{{ ansible_ssh_user }}/ceph.conf'
        shell: |
          ceph-deploy --overwrite-conf new {{ ceph.srv | join(' ') }}
        become: no

      - name: Добавление сетей в конфигурацию кластера '/home/{{ ansible_ssh_user }}/ceph.conf'
        blockinfile:
          dest: '/home/{{ ansible_ssh_user }}/ceph.conf'
          block: |
            public_network = {{ net.network }}
            cluster_network = {{ ceph.cluster_network }}
        become: no

      - name: Создание мониторов
        shell: |
          ceph-deploy --overwrite-conf mon create {{ ceph.srv | join(' ') }}
          sleep 10
        become: no

      - name: Обмен ключами
        shell: |
          ceph-deploy gatherkeys {{ ceph.srv | join(' ') }}
        become: no

      - name: Распространим конфигурации по нодам кластера
        shell: |
          ceph-deploy --overwrite-conf admin {{ ceph.srv | join(' ') }}
        become: no

      - name: Зарегистрировать службу диспетчера Ceph на узлах кластера
        shell: |
          ceph-deploy --overwrite-conf mgr create {{ ceph.srv | join(' ') }}
        become: no

      - name: Распространим конфигурации по нодам кластера
        shell: |
          ceph-deploy --overwrite-conf admin {{ ceph.srv | join(' ') }}
        become: no

      - name: Установка сервера метаданных MDS
        shell: |
          ceph-deploy --overwrite-conf mds create {{ ceph.srv | join(' ') }}
        become: no

      - name: Создание OSD на дисках узлов кластера и добавить их в кластер
        shell: |
          ceph-deploy --overwrite-conf osd create --data {{ ceph.dev[0] }} {{ item }}
        with_items: '{{ ceph.srv }}'
        become: no

      - name: Копирование ключей в '/etc/ceph/'
        shell: |
          cp /home/{{ ansible_ssh_user }}/ceph.*.keyring /etc/ceph/

      - name: Установка параметров безопасности
        shell: |
          ceph config set mon auth_allow_insecure_global_id_reclaim false
          ceph config set mon mon_warn_on_insecure_global_id_reclaim false
          ceph config set mon mon_warn_on_insecure_global_id_reclaim_allowed false
          ceph mgr module disable restful

      - name: Создание пула 'kubernetes'
        shell: |
          ceph osd pool create kubernetes 64

      - name: Создание 'cephfs'
        shell: |
          ceph osd pool create k8sfs_data 64
          ceph osd pool create k8sfs_metadata 64
          ceph fs new cephfs k8sfs_metadata k8sfs_data

      - name: Создание клиента 'kubernetes'
        shell: |
          ceph auth add client.kubernetes mon 'allow r' osd 'allow rwx pool=kubernetes,allow rwx pool=k8sfs_data' mds 'allow rw'

      - name: Инициализация пула 'kubernetes'
        shell: |     
          rbd pool init kubernetes
 
      # - name: Установкаить клиентские инструментальные средства Ceph
        # shell: |
          # ceph-deploy --overwrite-conf install --cli {{ ceph.srv | join(' ') }}
        # become: no

      # - name: Установить Web-админку
        # shell: |
          # ceph  ceph --force mgr module enable dashboard

      when: inventory_hostname == ceph.srv[0]

    when: not ceph_result.stat.exists

  when: inventory_hostname in ceph.srv

...

# test Ceph
# watch sudo ceph -s
# watch sudo ceph osd df
# watch sudo ceph osd tree

# Web-админка
# ceph mgr module disable dashboard
# ceph --force mgr module enable dashboard
# sudo ceph --force config set mgr mgr/dashboard/server_addr 10.150.1.207
# sudo ceph --force config set mgr mgr/dashboard/server_port $PORT
# sudo ceph --force config set mgr mgr/dashboard/ssl_server_port 8443
# echo 12345678 > /tmp/pass
# sudo ceph dashboard ac-user-create admin administrator -i /tmp/pass
# sudo radosgw-admin user create --uid=admin --display-name=admin --system
# echo 3YIF91NX6X35GBRPSKV0 > /tmp/key
# sudo ceph dashboard set-rgw-api-access-key -i /tmp/key
# echo h7tJuIy3hUCU9yU7FGwcJKJKYLLYQVirmAzmAVsC /tmp/key
# sudo ceph dashboard set-rgw-api-access-key -i /tmp/key
# sudo ceph dashboard create-self-signed-cert

# rest-api
# ceph-deploy install --rgw {{ cephfs.srv | join(' ') }}
# ceph-deploy rgwmds create {{ cephfs.srv | join(' ') }}
